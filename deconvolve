#!/usr/bin/env python

# * Copyright 2016 Alistair Buxton <a.j.buxton@gmail.com>
# *
# * License: This program is free software; you can redistribute it and/or
# * modify it under the terms of the GNU General Public License as published
# * by the Free Software Foundation; either version 3 of the License, or (at
# * your option) any later version. This program is distributed in the hope
# * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# * GNU General Public License for more details.

import sys
from teletext.vbi.map import raw_line_map
from teletext.vbi.pattern import Pattern
from teletext.vbi.line import Line

import config
Line.set_config(config)

cuda_enabled = False

try:
    from teletext.vbi.patterncuda import PatternCUDA
    pg = PatternCUDA('parity_patterns')
    cuda_enabled = True
except:
    sys.stdout.write('CUDA init failed, using CPU deconvolution.\n')


magazines = None
rows = None

if cuda_enabled:

    def doit(rl):
        l = Line(rl)
        if l.is_teletext:
            l.roll(config.extra_roll)
            l.bits()
            l.mrag()
        return l

    def find_other_bits_gpu(l):
        matches = pg.match(l.bits_array[36:362])
        for b in range(40):
            l.bytes_array[b+2] = pg.bytes[matches[b]]

else:
    def doit(rl):
        l = Line(rl)
        if l.is_teletext:
            l.roll(config.extra_roll)
            l.bits()
            l.mrag()
            if magazines is None or l.magazine in magazines:
                if rows is None or l.row in rows:
                    l.bytes()
        return l


for l in raw_line_map(sys.argv[1], config.line_length, doit, threads=2, show_speed=True):
    if magazines is None or l.magazine in magazines:
        if rows is None or l.row in rows:
            if cuda_enabled:
                find_other_bits_gpu(l)
            l.bytes_array.tofile(sys.stdout)

